{"version":3,"sources":["component/AppHeader.js","component/list_of_workers/WorkerItem.js","component/list_of_workers/ListOfWorkers.js","component/worker_data/WorkerFullName.js","component/worker_data/WorkerPosition.js","component/worker_data/WorkerDateOfBirth.js","component/worker_data/WorkerGender.js","component/worker_data/WorkerFired.js","component/worker_data/worker_colleagues/WorkerColleaguesItem.js","component/worker_data/worker_colleagues/WorkerColleaguesList.js","component/worker_data/worker_colleagues/AddColleaguesComponent.js","component/worker_data/worker_colleagues/WorkerColleagues.js","component/worker_data/WorkerData.js","component/AlertNotSelectedWorker.js","component/AppContainer.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["AppHeader","onClickAdd","onClickRemove","isDisabledRemove","className","onClick","disabled","WorkerItem","worker","selectedWorkerId","selectWorker","workerFullName","fullName","workerPosition","position","dateOfBirth","workerDateOfBirth","getDate","getMonth","getFullYear","workerIsMale","isMale","workerIsFiredJSX","isFired","type","id","ListOfWorkers","workers","workerItems","map","key","WorkerFullName","value","updateFullName","onChange","e","target","WorkerPosition","selectedValue","positions","updatePosition","positionsList","i","length","push","htmlFor","style","cursor","WorkerBirthDate","updateBirthDate","InputForDatePicker","readOnly","selected","customInput","date","WorkerGender","updateGender","WorkerFired","updateFired","WorkerColleaguesItem","colleague","removeColleague","parseInt","WorkerColleaguesList","workerColleaguesList","colleagues","role","colleaguesJSX","find","element","AddColleaguesComponent","addColleagueComponent","addColleague","notColleaguesList","filter","w","findIndex","el","hidden","WorkerColleagues","Width","WorkerData","updateWorkerActions","UpdateFullName","UpdatePosition","UpdateBirthDate","UpdateGender","UpdateFired","AddColleague","RemoveColleague","AlertNotSelectedWorker","AppContainer","workerDescription","selectedWorkerIndex","App","appState","AddWorker","RemoveWorker","SelectWorker","UpdateWorkerActions","initialState","Date","_nextId","_isWorkerId","action","AddWorkerActionCreator","store","dispatch","RemoveWorkerActionCreator","SelectWorkerActionCreator","newFullName","UpdateFullNameActionCreator","newPosition","UpdatePositionActionCreator","newDateOfBirth","UpdateBirthDateActionCreator","newGender","UpdateGenderActionCreator","UpdateFiredActionCreator","colleagueId","AddColleagueActionCreator","RemoveColleagueActionCreator","reducers","combineReducers","state","newWorker","removeId","removeColId","createStore","Boolean","window","location","hostname","match","rerenderEntireTree","ReactDOM","render","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36982e37.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst AppHeader = ({\r\n                       onClickAdd,\r\n                       onClickRemove,\r\n                       isDisabledRemove}) => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n            <div className=\"navbar-brand\">\r\n                GreenData Test\r\n            </div>\r\n            <button\r\n                className=\"addWorker btn btn-success\"\r\n                onClick={() => onClickAdd()}\r\n            >\r\n                Add\r\n            </button>\r\n            <button\r\n                className=\"removeWorker btn btn-danger\"\r\n                onClick={() => onClickRemove()}\r\n                disabled={isDisabledRemove}\r\n            >\r\n                Remove\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, {Fragment} from \"react\";\r\n\r\n\r\nconst WorkerItem = ({worker, selectedWorkerId, selectWorker}) => {\r\n    const onSelectWorker = () => selectWorker(worker.id);\r\n    const workerFullName = worker.fullName;\r\n    const workerPosition = worker.position;\r\n\r\n    const dateOfBirth = worker.dateOfBirth;\r\n    const workerDateOfBirth = \"Дата рождения: \" +\r\n        (dateOfBirth.getDate() < 10 ? \"0\" : \"\") + dateOfBirth.getDate() + \".\" +\r\n        (dateOfBirth.getMonth() < 10 ? \"0\" : \"\") + dateOfBirth.getMonth() + \".\" +\r\n        dateOfBirth.getFullYear();\r\n    const workerIsMale = \"Пол: \" + (worker.isMale ? \"Мужской\" : \"Женский\");\r\n    const workerIsFiredJSX = (worker.isFired ? (<small>Уволен</small>) : <Fragment/>);\r\n    return (\r\n        <button type=\"button\"\r\n                onClick={onSelectWorker}\r\n                className={`list-group-item list-group-item-action ${selectedWorkerId === worker.id ? \"active\" : \"\"}`}\r\n        >\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n                <h5 className=\"mb-1\">{workerFullName}</h5>\r\n                <small>{workerPosition}</small>\r\n            </div>\r\n            <p className=\"mb-1\">\r\n                {workerDateOfBirth} <br/>\r\n                {workerIsMale} <br/>\r\n            </p>\r\n            {workerIsFiredJSX}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default WorkerItem;","import React from \"react\";\r\nimport WorkerItem from \"./WorkerItem\";\r\n\r\n\r\nconst ListOfWorkers = ({workers, selectedWorkerId, selectWorker}) => {\r\n    const workerItems = workers.map((worker) => (\r\n        <WorkerItem worker={worker} key={worker.id}\r\n                    selectedWorkerId={selectedWorkerId}\r\n                    selectWorker={selectWorker}\r\n        />\r\n    ));\r\n    return (\r\n        <div className=\"listOfWorkers\">\r\n            <div className=\"list-group\">\r\n                {workerItems}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListOfWorkers;","import React from \"react\";\r\n\r\n\r\nconst WorkerFullName = ({value, updateFullName}) => {\r\n    const onChangeFullName = (e) => {updateFullName(e.target.value)};\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">ФИО:</span>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={value}\r\n                onChange={onChangeFullName}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerFullName;","import React from \"react\";\r\n\r\n\r\nconst WorkerPosition = ({value, positions, updatePosition}) => {\r\n    const onChangePosition = (e) => {updatePosition(positions[e.target.value])};\r\n    let positionsList = [];\r\n    let selectedValue;\r\n    for(let i = 0; i < positions.length; i++) {\r\n        const isSelected = value === positions[i];\r\n        if (isSelected) selectedValue = i;\r\n        positionsList.push(\r\n            <option value={i} key={i}>\r\n                {positions[i]}\r\n            </option>\r\n        );\r\n    }\r\n    return(\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" htmlFor=\"inputGroupSelectPosition\">Должность:</label>\r\n            </div>\r\n            <select className=\"custom-select\" id=\"inputGroupSelectPosition\"\r\n                    style={{cursor: \"pointer\"}}\r\n                    onChange={onChangePosition} value={selectedValue}\r\n            >\r\n                {positionsList}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerPosition;","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst WorkerBirthDate = ({value, updateBirthDate}) => {\r\n    const onChangeBirthDate = (date) => { updateBirthDate(date)};\r\n    const InputForDatePicker = ({ value, onClick }) => (\r\n        <input type=\"text\" className=\"form-control bg-light\"\r\n               style={{cursor: \"pointer\"}} value={value} readOnly onClick={onClick}/>\r\n    );\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Дата рождения:</span>\r\n            </div>\r\n            <DatePicker\r\n                selected={value}\r\n                customInput={<InputForDatePicker />}\r\n                onChange={onChangeBirthDate}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerBirthDate;","import React from \"react\";\r\n\r\n\r\nconst WorkerGender = ({value, updateGender}) => {\r\n    const onChangeGender = (e) => {updateGender(e.target.value === \"true\")};\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" htmlFor=\"inputGroupSelectGender\">Пол:</label>\r\n            </div>\r\n            <select\r\n                className=\"custom-select\"\r\n                style={{cursor: \"pointer\"}}\r\n                id=\"inputGroupSelectGender\"\r\n                onChange={onChangeGender} value={value}\r\n            >\r\n                <option value={true}>Мужской</option>\r\n                <option value={false}>Женский</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerGender;","import React from \"react\";\r\n\r\n\r\nconst WorkerFired = ({value, updateFired}) => {\r\n    const onChangeFired = (e) => {updateFired(e.target.value === \"true\")};\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" htmlFor=\"inputGroupSelectGender\">Уволен:</label>\r\n            </div>\r\n            <select\r\n                className=\"custom-select\"\r\n                style={{cursor: \"pointer\"}}\r\n                id=\"inputGroupSelectGender\"\r\n                onChange={onChangeFired}\r\n                value={value}\r\n            >\r\n                <option value={true}>Да</option>\r\n                <option value={false}>Нет</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerFired;","import React from \"react\";\r\n\r\n\r\nconst WorkerColleaguesItem = ({colleague, removeColleague}) => {\r\n    const onRemoveColleague = (e) => {removeColleague(parseInt(e.target.value, 10))};\r\n    return (\r\n        <li className=\"list-group-item note\">\r\n            <strong>{colleague.fullName}</strong>\r\n            <small>{colleague.position}</small>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm\"\r\n                value={colleague.id}\r\n                onClick={onRemoveColleague}>\r\n                &times;\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default WorkerColleaguesItem;","import React from \"react\";\r\nimport WorkerColleaguesItem from \"./WorkerColleaguesItem\";\r\n\r\n\r\nconst WorkerColleaguesList = ({colleagues, workers, removeColleague}) => {\r\n    let workerColleaguesList;\r\n    if (colleagues.length === 0) {\r\n        workerColleaguesList = (\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n                <h5 className=\"alert-heading text-center\">У этого сотрудника нет коллег!</h5>\r\n            </div>\r\n        );\r\n    } else {\r\n        let colleaguesJSX = [];\r\n        for (let i = 0; i < colleagues.length; i++) {\r\n            let colleague = workers.find((element) => colleagues[i] === element.id);\r\n            colleaguesJSX.push(\r\n                <WorkerColleaguesItem colleague={colleague} removeColleague={removeColleague}/>\r\n            );\r\n        }\r\n        workerColleaguesList = (\r\n            <ul className=\"list-group\">\r\n                {colleaguesJSX}\r\n            </ul>\r\n        );\r\n    }\r\n    return workerColleaguesList;\r\n};\r\n\r\nexport default WorkerColleaguesList;","import React, {Fragment} from \"react\";\r\n\r\n\r\nconst AddColleaguesComponent = ({selectedWorkerId, colleagues, workers, addColleague}) => {\r\n    const onAddColleague = (e) => {addColleague(parseInt(e.target.value))};\r\n    let addColleagueComponent;\r\n    if (workers.length > (colleagues.length + 1)) {\r\n        let notColleaguesList =\r\n            workers.filter(w => (w.id !== selectedWorkerId) && (colleagues.findIndex((el) => el === w.id) === -1));\r\n        notColleaguesList = notColleaguesList.map(worker => (\r\n            <option value={worker.id} key={worker.id}>\r\n                {`${worker.fullName} (${worker.position})`}\r\n            </option>\r\n        ));\r\n        addColleagueComponent = (\r\n            <div className=\"input-group mt-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelectAddColleague\">Добавить:</label>\r\n                </div>\r\n                <select className=\"custom-select\" id=\"inputGroupSelectAddColleague\"\r\n                        value={-1} style={{cursor: \"pointer\"}}\r\n                        onChange={onAddColleague}\r\n                >\r\n                    <option value={-1} hidden>Выберите соткрудника из списка, чтобы добавить коллегу</option>\r\n                    {notColleaguesList}\r\n                </select>\r\n            </div>\r\n        );\r\n    } else {\r\n        addColleagueComponent = <Fragment/>;\r\n    }\r\n    return addColleagueComponent;\r\n};\r\n\r\nexport default AddColleaguesComponent;","import React from \"react\";\r\nimport WorkerColleaguesList from \"./WorkerColleaguesList\";\r\nimport AddColleaguesComponent from \"./AddColleaguesComponent\";\r\n\r\n\r\nconst WorkerColleagues = ({selectedWorkerId, colleagues, workers, addColleague, removeColleague}) => {\r\n    return (\r\n        <div className=\"card mb-3\" style={{Width: \"18rem\"}}>\r\n            <div className=\"card-header text-center\">\r\n                Коллеги\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <WorkerColleaguesList\r\n                    colleagues={colleagues}\r\n                    workers={workers}\r\n                    removeColleague={removeColleague}\r\n                />\r\n                <AddColleaguesComponent\r\n                    selectedWorkerId={selectedWorkerId}\r\n                    colleagues={colleagues}\r\n                    workers={workers}\r\n                    addColleague={addColleague}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerColleagues;","import React from \"react\";\r\nimport WorkerFullName from \"./WorkerFullName\";\r\nimport WorkerPosition from \"./WorkerPosition\";\r\nimport WorkerBirthDate from \"./WorkerDateOfBirth\";\r\nimport WorkerGender from \"./WorkerGender\";\r\nimport WorkerFired from \"./WorkerFired\";\r\nimport WorkerColleagues from \"./worker_colleagues/WorkerColleagues\";\r\n\r\n\r\nconst WorkerData = ({worker, positions, workers, updateWorkerActions}) => {\r\n    return (\r\n        <div className=\"workerData\">\r\n            <div className=\"card border-primary mb-3\" style={{Width: \"18rem\"}}>\r\n                <div className=\"card-header text-center text-white bg-primary\">\r\n                    Данные о сотруднике\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <WorkerFullName\r\n                        value={worker.fullName}\r\n                        updateFullName={updateWorkerActions.UpdateFullName}\r\n                    />\r\n                    <WorkerPosition\r\n                        value={worker.position}\r\n                        positions={positions}\r\n                        updatePosition={updateWorkerActions.UpdatePosition}\r\n                    />\r\n                    <WorkerBirthDate\r\n                        value={worker.dateOfBirth}\r\n                        updateBirthDate={updateWorkerActions.UpdateBirthDate}\r\n                    />\r\n                    <WorkerGender\r\n                        value={worker.isMale}\r\n                        updateGender={updateWorkerActions.UpdateGender}\r\n                    />\r\n                    <WorkerFired\r\n                        value={worker.isFired}\r\n                        updateFired={updateWorkerActions.UpdateFired}\r\n                    />\r\n                    <WorkerColleagues\r\n                        selectedWorkerId={worker.id}\r\n                        colleagues={worker.colleagues}\r\n                        workers={workers}\r\n                        addColleague={updateWorkerActions.AddColleague}\r\n                        removeColleague={updateWorkerActions.RemoveColleague}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkerData;","import React from \"react\";\r\n\r\n\r\nconst AlertNotSelectedWorker = () => (\r\n    <div className=\"alert alert-primary\" role=\"alert\">\r\n        <h4 className=\"alert-heading\">Сотрудник не выбран!</h4>\r\n        Для того, чтобы увидеть всю информацию о сотруднике&nbsp;\r\n        <strong>выберите</strong> сотрудника из списка либо&nbsp;\r\n        <strong>создайте</strong> нового с помощью кнопки\r\n        <strong>\"Добавить\"</strong>.\r\n    </div>\r\n);\r\n\r\nexport default AlertNotSelectedWorker;","import ListOfWorkers from \"./list_of_workers/ListOfWorkers\";\r\nimport WorkerData from \"./worker_data/WorkerData\";\r\nimport React from \"react\";\r\nimport AlertNotSelectedWorker from \"./AlertNotSelectedWorker\";\r\n\r\n\r\nconst AppContainer = ({\r\n                          positions,\r\n                          workers,\r\n                          selectedWorkerIndex,\r\n                          selectedWorkerId,\r\n                          selectWorker,\r\n                          updateWorkerActions}) => {\r\n    let workerDescription;\r\n    if (selectedWorkerId === -1) {\r\n        workerDescription = <AlertNotSelectedWorker/>;\r\n    } else {\r\n        const worker = workers[selectedWorkerIndex];\r\n        workerDescription = (\r\n            <WorkerData\r\n                worker={worker}\r\n                positions={positions}\r\n                workers={workers}\r\n                updateWorkerActions={updateWorkerActions}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-container row\">\r\n            <div className=\"col-sm\"\r\n                 onClick={() => selectWorker(-1)}\r\n            >\r\n                <ListOfWorkers\r\n                    workers={workers}\r\n                    selectedWorkerId={selectedWorkerId}\r\n                    selectWorker={selectWorker}\r\n                />\r\n            </div>\r\n            <div className=\"col-sm\">\r\n                {workerDescription}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppContainer;","import React, {Fragment} from 'react';\nimport AppHeader from \"./component/AppHeader\";\nimport AppContainer from \"./component/AppContainer\";\n\n\nconst App = ({appState}) => {\n    return (\n        <Fragment>\n            <AppHeader\n                onClickAdd={appState.AddWorker}\n                onClickRemove={appState.RemoveWorker}\n                isDisabledRemove={appState.selectedWorkerIndex === -1}\n            />\n            <AppContainer\n                positions={appState.positions}\n                workers={appState.workers}\n                selectedWorkerIndex={appState.selectedWorkerIndex}\n                selectedWorkerId={appState.selectedWorkerId}\n                selectWorker={appState.SelectWorker}\n                updateWorkerActions={appState.UpdateWorkerActions}\n            />\n        </Fragment>\n    );\n};\n\nexport default App;","import {combineReducers, createStore} from \"redux\";\r\n\r\n\r\nlet initialState = {\r\n    positions: [\r\n        \"Архитектор\",\r\n        \"Специалист по ВЭД\",\r\n        \"Спортивный тренер\",\r\n        \"Дворник\",\r\n        \"Историк\",\r\n        \"Бармен\",\r\n        \"Дипломат\",\r\n        \"Литейщик\",\r\n        \"Бондарь\",\r\n        \"Инструктор по видам спорта\"\r\n    ],\r\n    workers: [\r\n        {\r\n            id: 0,\r\n            fullName: \"Брагин Натан Глебович\",\r\n            position: \"Историк\",\r\n            dateOfBirth: new Date(),\r\n            isMale: true,\r\n            isFired: false,\r\n            colleagues: []\r\n        },\r\n        {\r\n            id: 1,\r\n            fullName: \"Иванкова Ангелина Эльдаровна\",\r\n            position: \"Дипломат\",\r\n            dateOfBirth: new Date(),\r\n            isMale: false,\r\n            isFired: false,\r\n            colleagues: [ 0 ]\r\n        }\r\n    ],\r\n    _nextId: 2,\r\n    _isWorkerId: false,\r\n    selectedWorkerId: 0,\r\n    selectedWorkerIndex: 0,\r\n\r\n    AddWorker() {\r\n        let action = AddWorkerActionCreator();\r\n        store.dispatch(action);\r\n    },\r\n    RemoveWorker() {\r\n        let action = RemoveWorkerActionCreator();\r\n        store.dispatch(action);\r\n    },\r\n    SelectWorker(selectedWorkerId) {\r\n        let action = SelectWorkerActionCreator(selectedWorkerId);\r\n        store.dispatch(action);\r\n    },\r\n    UpdateWorkerActions: {\r\n        UpdateFullName(newFullName) {\r\n            let action = UpdateFullNameActionCreator(newFullName);\r\n            store.dispatch(action);\r\n        },\r\n        UpdatePosition(newPosition) {\r\n            let action = UpdatePositionActionCreator(newPosition);\r\n            store.dispatch(action);\r\n        },\r\n        UpdateBirthDate(newDateOfBirth) {\r\n            let action = UpdateBirthDateActionCreator(newDateOfBirth);\r\n            store.dispatch(action);\r\n        },\r\n        UpdateGender(newGender) {\r\n            let action = UpdateGenderActionCreator(newGender);\r\n            store.dispatch(action);\r\n        },\r\n        UpdateFired(isFired) {\r\n            let action = UpdateFiredActionCreator(isFired);\r\n            store.dispatch(action);\r\n        },\r\n        AddColleague(colleagueId) {\r\n            let action = AddColleagueActionCreator(colleagueId);\r\n            store.dispatch(action);\r\n        },\r\n        RemoveColleague(colleagueId) {\r\n            let action = RemoveColleagueActionCreator(colleagueId);\r\n            store.dispatch(action);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst SELECT_WORKER = 'SELECT_WORKER';\r\nconst ADD_WORKER = 'ADD_WORKER';\r\nconst REMOVE_WORKER = 'REMOVE_WORKER';\r\nconst UPDATE_FULL_NAME = 'UPDATE_FULL_NAME';\r\nconst UPDATE_POSITION = 'UPDATE_POSITION';\r\nconst UPDATE_BIRTH_DATE = 'UPDATE_BIRTH_DATE';\r\nconst UPDATE_GENDER = 'UPDATE_GENDER';\r\nconst UPDATE_FIRED = 'UPDATE_FIRED';\r\nconst ADD_COLLEAGUE = 'ADD_COLLEAGUE';\r\nconst REMOVE_COLLEAGUE = 'REMOVE_COLLEAGUE';\r\n\r\n\r\nexport const AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_WORKER:\r\n            if (action.selectedWorkerId === -1 && state._isWorkerId)\r\n                state._isWorkerId = false;\r\n            else {\r\n                state.selectedWorkerId = action.selectedWorkerId;\r\n                state._isWorkerId = action.selectedWorkerId !== -1;\r\n                if (state.selectedWorkerId !== -1) {\r\n                    state.selectedWorkerIndex = state.workers.findIndex(\r\n                        (element) => element.id === state.selectedWorkerId);\r\n                } else {\r\n                    state.selectedWorkerIndex = -1;\r\n                }\r\n            }\r\n            return state;\r\n        case ADD_WORKER:\r\n            let newWorker = {\r\n                id: state._nextId,\r\n                fullName: \"Иванов Иван Иванович\",\r\n                position: state.positions[0],\r\n                dateOfBirth: new Date(),\r\n                isMale: true,\r\n                isFired: false,\r\n                colleagues: []\r\n            };\r\n            state._nextId++;\r\n            state.workers.push(newWorker);\r\n            state.selectedWorkerId = newWorker.id;\r\n            state.selectedWorkerIndex = state.workers.length - 1;\r\n            return state;\r\n        case REMOVE_WORKER:\r\n            let removeId = state.selectedWorkerId;\r\n            let workers = state.workers;\r\n            for (let i = 0; i < workers.length; i++) {\r\n                let colleagues = workers[i].colleagues;\r\n                colleagues = colleagues.filter(id => id !== removeId);\r\n                workers[i].colleagues = colleagues;\r\n            }\r\n            workers = workers.filter(worker => worker.id !== removeId);\r\n            state.workers = workers;\r\n            state.selectedWorkerId = -1;\r\n            state.selectedWorkerIndex = -1;\r\n            return state;\r\n        case UPDATE_FULL_NAME:\r\n            state.workers[state.selectedWorkerIndex].fullName = action.newFullName;\r\n            return state;\r\n        case UPDATE_POSITION:\r\n            state.workers[state.selectedWorkerIndex].position = action.newPosition;\r\n            return state;\r\n        case UPDATE_BIRTH_DATE:\r\n            state.workers[state.selectedWorkerIndex].dateOfBirth = action.newDateOfBirth;\r\n            return state;\r\n        case UPDATE_GENDER:\r\n            state.workers[state.selectedWorkerIndex].isMale = action.newGender;\r\n            return state;\r\n        case UPDATE_FIRED:\r\n            state.workers[state.selectedWorkerIndex].isFired = action.isFired;\r\n            return state;\r\n        case ADD_COLLEAGUE:\r\n            state.workers[state.selectedWorkerIndex].colleagues.push(action.colleagueId);\r\n            return state;\r\n        case REMOVE_COLLEAGUE:\r\n            let removeColId = action.colleagueId;\r\n            let colleagues = state.workers[state.selectedWorkerIndex].colleagues;\r\n            colleagues = colleagues.filter(id => id !== removeColId);\r\n            state.workers[state.selectedWorkerIndex].colleagues = colleagues;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst SelectWorkerActionCreator = (selectedWorkerId) => {\r\n    return {\r\n        type: SELECT_WORKER,\r\n        selectedWorkerId: selectedWorkerId\r\n    };\r\n};\r\n\r\nconst AddWorkerActionCreator = () => {\r\n    return {\r\n        type: ADD_WORKER\r\n    };\r\n};\r\n\r\nconst RemoveWorkerActionCreator = () => {\r\n    return {\r\n        type: REMOVE_WORKER\r\n    };\r\n};\r\n\r\nconst UpdateFullNameActionCreator = (newFullName) => {\r\n    return {\r\n        type: UPDATE_FULL_NAME,\r\n        newFullName: newFullName\r\n    };\r\n};\r\n\r\nconst UpdatePositionActionCreator = (newPosition) => {\r\n    return {\r\n        type: UPDATE_POSITION,\r\n        newPosition: newPosition\r\n    };\r\n};\r\n\r\nconst UpdateBirthDateActionCreator = (newDateOfBirth) => {\r\n    return {\r\n        type: UPDATE_BIRTH_DATE,\r\n        newDateOfBirth: newDateOfBirth\r\n    };\r\n};\r\n\r\nconst UpdateGenderActionCreator = (newGender) => {\r\n    return {\r\n        type: UPDATE_GENDER,\r\n        newGender: newGender\r\n    };\r\n};\r\n\r\nconst UpdateFiredActionCreator = (isFired) => {\r\n    return {\r\n        type: UPDATE_FIRED,\r\n        isFired: isFired\r\n    };\r\n};\r\n\r\nconst AddColleagueActionCreator = (colleagueId) => {\r\n    return {\r\n        type: ADD_COLLEAGUE,\r\n        colleagueId: colleagueId\r\n    };\r\n};\r\n\r\nconst RemoveColleagueActionCreator = (colleagueId) => {\r\n    return {\r\n        type: REMOVE_COLLEAGUE,\r\n        colleagueId: colleagueId\r\n    };\r\n};\r\n\r\nlet reducers = combineReducers({appState: AppReducer});\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport \"./index.scss\";\nimport * as serviceWorker from './serviceWorker';\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <App appState={state.appState}/>,\n        document.getElementById('root')\n    );\n};\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => rerenderEntireTree(store.getState()));\n\nserviceWorker.unregister();"],"sourceRoot":""}